@{
	Layout = null;
}

<article class="t2_sec" style="margin-top:5%;">
	Создание расширенной карточки
</article>

<div id="make_exp" style="margin-bottom:2%;display:flex">
	<section id="exp_card_container">
		<div class="exp_card">
			<div class="exp_header">
				<p>Тема</p>
			</div>
			<div class="stripe">
				<article onclick="$('#screen').fadeOut(800, function () { });">Закрыть</article>
			</div>
			<div class="inner no">

				<div class="definition">
					<p contenteditable>Термин</p>
				</div>

				<div class="exp_formula">
					<span class="t2_exp_span" id="math-field-2" style="border:none;border-bottom:1px solid black;" onclick="last_field=2">Формула	</span>
				</div>

				<div class="exp_card_main">
					<p class="exp_span" onclick="last_field=3" contenteditable>Дополнительная информация	</p>
				</div>
			</div>

			<div class="exp_footer">
				<p contenteditable>Футер</p>
			</div>
		</div>

		<section style="text-align:left;">
			<p style="display:none;" class="t2_exp_p"><span id="latex-1"></span></p>
			<p style="display:none;" class="t2_exp_p"><span id="latex-2"></span></p>
			<p style="display:none;" class="t2_exp_p"><span id="latex-3"></span></p>
		</section>

		<div class="pr_make_button" href="#make_exp" style="width:50%;display:inline-block;margin-right:-4px;">
			@Ajax.ActionLink("Назад", "CreateStep1",
						new AjaxOptions
						{
							UpdateTargetId = "pr_content"
						})
		</div>

		<a class="pr_make_button" href="#make_exp" style="display:inline-block;margin-right:-4px;width:50%;">
			Далее
		</a>

	</section>

	<section style="width:61.8%;text-align:center;">
		<article  id="builder_article">Конструктор формул</article>

		<section style="display:flex" id="formula_open">
			<article class="t2_sub_article" id="op_trigger">Операции</article>
			<article class="t2_sub_article" id="sym_trigger">Символы</article>

			<script>
				$('.t2_sub_article').on('click', function () {
					$('.dr').css('height', $('.exp_card').height()/2);
				});

				$('#op_trigger').on('click', function () {
					if ($('#operators').css('display') == 'none') {
						$('#operators').css('display', 'flex');
						$(this).css('border-bottom', '0.625vmin solid black');

						$('#symbols').hide();
					}
					else {
						$('#operators').hide();
						$(this).css('border-bottom', '0.625vmin double black');
					}


				})

				$('#sym_trigger').on('click', function () {

					if ($('#symbols').css('display') == 'none') {
						$('#symbols').css('display', 'flex');
						$(this).css('border-bottom', '0.625vmin solid black');

						$('#operators').hide();
					}
					else {
						$('#symbols').hide();
						$(this).css('border-bottom', '0.625vmin double black');
					}
				})
			</script>
		</section>

		<section style="display:flex;">
			<div class="dr" id="operators">
				<div class="button norm op" onclick="add('\\+')">			<p>+				</p></div>
				<div class="button norm op" onclick="add('-')">				<p>-				</p></div>
				<div class="button norm op" onclick="add('\\cdot')">		<p>X				</p></div>
				<div class="button norm op" onclick="add(':')">				<p>:				</p></div>
				<div class="button norm op" onclick="add('\\pm')">			<p>±				</p></div>

				<div class="button  op" onclick="add('\\sin{}')">			<p>$$\sin$$					</p></div>
				<div class="button  op" onclick="add('\\cos{}')">			<p>$$\cos$$					</p></div>
				<div class="button  op" onclick="add('\\tan')">				<p>$$\tan$$					</p></div>
				<div class="button  op" onclick="add('\\cot()')">			<p>$$\cot$$					</p></div>

				<div class="button  op" onclick="add('\\int^{}_{}{}')">		<p>$$\int_b^a f(x) dx$$		</p></div>
				<div class="button  op" onclick="add('\\oint')">			<p>$$\unicode{x222F}$$		</p></div>

				<div class="button  op" onclick="add('\\lim_{}')">			<p>$$\lim_{x\to 0} f(x)$$	</p></div>
				<div class="button  op" onclick="add('\\to')">				<p>$$\to$$					</p></div>

				<div class="button norm op" onclick="add('\\Sigma_{}')">	<p>Σ Сигма				</p></div>
				<div class="button norm op" onclick="add('\\prod_{}')">		<p>∏ Продукт			</p></div>

				<div class="button op" onclick="add('\\frac{}{}')">			<p>$$\frac{a}{b}$$	</p></div>
				<div class="button op" onclick="add('\\vec{}')">			<p>$$\vec{a}$$		</p></div>
				<div class="button op" onclick="add('\\sqrt{}')">			<p>$$\sqrt{a}$$		</p></div>
				<div class="button op" onclick="add('\\sqrt[]{}')">			<p>$$\sqrt[x]{a}$$	</p></div>
				<div class="button norm op" onclick="add('<')">				<p>	&lt;			</p></div>
				<div class="button norm op" onclick="add('>')">				<p>>				</p></div>
				<div class="button norm op" onclick="add('≤')">				<p>≤				</p></div>
				<div class="button norm op" onclick="add('≥')">				<p>≥				</p></div>
			</div>

			<div class="dr" id="symbols">

				<div id="MU" class="button norm sym" onclick="add('\\Sigma')">	<p>Σ Сигма				</p></div>
				<div class="button norm sym" onclick="add('\\pi')">				<p>π Пи					</p></div>
				<div class="button norm sym" onclick="add('e')">				<p>e 					</p></div>
				<div class="button sym sym" onclick="add('\\alpha')">			<p>$$\alpha$$ Альфа		</p></div>
				<div class="button sym" onclick="add('\\beta')">				<p>$$\beta$$ Бета		</p></div>
				<div class="button sym" onclick="add('\\gamma')">				<p>$$\gamma$$ Гамма		</p></div>
				<div class="button sym" onclick="add('\\delta')">				<p>$$\delta$$ Дельта	</p></div>
				<div class="button sym" onclick="add('\\epsilon')">				<p>$$\epsilon$$	Эпсилон	</p></div>
				<div class="button sym" onclick="add('\\zeta')">				<p>$$\zeta$$ Зета		</p></div>
				<div class="button sym" onclick="add('\\eta')">					<p>$$\eta$$	Эта			</p></div>
				<div class="button sym" onclick="add('\\theta')">				<p>$$\theta$$ Тета		</p></div>
				<div class="button sym" onclick="add('\\iota')">				<p>$$\iota$$ Иота		</p></div>
				<div class="button sym" onclick="add('\\kappa')">				<p>$$\kappa$$ Карра		</p></div>
				<div class="button sym" onclick="add('\\lambda')">				<p>$$\lambda$$ Лямбда	</p></div>
				<div class="button sym" onclick="add('\\mu')">					<p>$$\mu$$	Мю			</p></div>
				<div class="button sym" onclick="add('\\nu')">					<p>$$\nu$$	Ню			</p></div>
				<div class="button sym" onclick="add('\\xi')">					<p>$$\xi$$	Кси			</p></div>
				<div class="button sym" onclick="add('\\o')">					<p>$$o$$	О			</p></div>
				<div class="button sym" onclick="add('\\rho')">					<p>$$\rho$$	Ро			</p></div>
				<div class="button sym" onclick="add('\\tau')">					<p>$$\tau$$	Тау			</p></div>
				<div class="button sym" onclick="add('\\upsilon')">				<p>$$\upsilon$$ Апсилон	</p></div>
				<div class="button sym" onclick="add('\\phi')">					<p>$$\phi$$	Фи			</p></div>
				<div class="button sym" onclick="add('\\chi')">					<p>$$\chi$$	Чи			</p></div>
				<div class="button sym" onclick="add('\\psi')">					<p>$$\psi$$	Пси			</p></div>
				<div class="button sym" onclick="add('\\omega')">				<p>$$\omega$$ Омега		</p></div>
			</div>
		</section>

		<div style="background:white;padding:1%;width:100%;margin-top:4%;text-align:left;overflow:auto;">
			<p id="math-field-3" style="font:1vmax 'Century Gothic'" onclick="last_field = 3"></p>
		</div>
	</section>



	<script>
		$('.exp_card p').on('click', function () {
			var cell = this;
			// select all text in contenteditable
			// see http://stackoverflow.com/a/6150060/145346
			var range, selection;
			if (document.body.createTextRange) {
				range = document.body.createTextRange();
				range.moveToElementText(cell);
				range.select();
			} else if (window.getSelection) {
				selection = window.getSelection();
				range = document.createRange();
				range.selectNodeContents(cell);
				selection.removeAllRanges();
				selection.addRange(range);
			}
		});
	</script>
</div>

<script>
	var last_field;

	var mathFieldSpan2 = document.getElementById('math-field-2');
	var latexSpan2 = document.getElementById('latex-2');

	var mathFieldSpan3 = document.getElementById('math-field-3');
	var latexSpan3 = document.getElementById('latex-3');

	var exp_formula_latex;
	var exp_definition_latex;
	var exp_main_latex;

	var MQ = MathQuill.getInterface(2); // for backcompat

	var mathField2 = MQ.MathField(mathFieldSpan2, {
		spaceBehavesLikeTab: true, // configurable
		handlers: {
			edit: function () { // useful event handlers
				latexSpan2.textContent = mathField2.latex();
				exp_formula_latex = mathField2.latex();
			}
		}
	});

	var mathField3 = MQ.MathField(mathFieldSpan3, {
		spaceBehavesLikeTab: false, // configurable
		handlers: {
			edit: function () { // useful event handlers
				latexSpan3.textContent = mathField3.latex();
				exp_main_latex = mathField3.latex();
			}
		}
	});

	/*
	$('#math-field-3').keypress(function (e) {
		if (e.which == 13) {
			mathField3.write('\n');
		}
	});*/

	var symbol_value;

	function add(symbol) {
		var res = symbol;

		if (last_field == 2) {
			mathField2.write(res);
			mathField2.focus();
		}
		if (last_field == 3) {
			mathField3.write(res);
			mathField3.focus();
		}

	}

	$('#t2_exp_save').on('click', function () {
		$('.formula p').text($('#t2_exp_p').text());
		$('#t2_exp_container').hide(800);
	});

	$(document).ready(function () {
		ref_cards();
	});
	MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
</script>
